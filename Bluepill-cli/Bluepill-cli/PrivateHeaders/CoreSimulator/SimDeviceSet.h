//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@import Foundation;

#import "SimDeviceNotifier-Protocol.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSObject, NSString, SimDeviceNotificationManager, SimServiceContext;

@interface SimDeviceSet : NSObject <SimDeviceNotifier>
{
    NSString *_setPath;
    NSObject<OS_dispatch_queue> *_devicesQueue;
    NSMutableDictionary *__devicesByUDID;
    NSMutableDictionary *_devicesNotificationRegIDs;
    NSMutableDictionary *__devicePairsByUUID;
    NSMutableDictionary *_devicePairsNotificationRegIDs;
    SimServiceContext *_serviceContext;
    SimDeviceNotificationManager *_notificationManager;
    NSObject *_defaultCreatedDevicesQueue;
    NSMutableDictionary *_defaultCreatedDevices;
    NSString *_defaultCreatedLastDeveloperDir;
}

+ (id)defaultSetPath;
@property(retain, nonatomic) NSString *defaultCreatedLastDeveloperDir; // @synthesize defaultCreatedLastDeveloperDir=_defaultCreatedLastDeveloperDir;
@property(retain, nonatomic) NSMutableDictionary *defaultCreatedDevices; // @synthesize defaultCreatedDevices=_defaultCreatedDevices;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *defaultCreatedDevicesQueue; // @synthesize defaultCreatedDevicesQueue=_defaultCreatedDevicesQueue;
@property(retain, nonatomic) SimDeviceNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(retain, nonatomic) SimServiceContext *serviceContext; // @synthesize serviceContext=_serviceContext;
@property(retain, nonatomic) NSMutableDictionary *devicePairsNotificationRegIDs; // @synthesize devicePairsNotificationRegIDs=_devicePairsNotificationRegIDs;
@property(retain, nonatomic) NSMutableDictionary *_devicePairsByUUID; // @synthesize _devicePairsByUUID=__devicePairsByUUID;
@property(retain, nonatomic) NSMutableDictionary *devicesNotificationRegIDs; // @synthesize devicesNotificationRegIDs=_devicesNotificationRegIDs;
@property(retain, nonatomic) NSMutableDictionary *_devicesByUDID; // @synthesize _devicesByUDID=__devicesByUDID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *devicesQueue; // @synthesize devicesQueue=_devicesQueue;
@property(copy, nonatomic) NSString *setPath; // @synthesize setPath=_setPath;
- (void)handleXPCRequestUnpair:(struct NSDictionary *)arg1;
- (void)handleXPCRequestPair:(struct NSDictionary *)arg1;
- (void)handleXPCRequestDeleteDevice:(struct NSDictionary *)arg1 device:(id)arg2;
- (void)handleXPCRequestCloneDevice:(struct NSDictionary *)arg1 device:(id)arg2;
- (void)handleXPCRequestCreateDevice:(struct NSDictionary *)arg1;
- (void)handleXPCRequest:(struct NSDictionary *)arg1;
- (void)handleXPCNotificationDevicePairRemoved:(struct NSDictionary *)arg1;
- (void)handleXPCNotificationDevicePairAdded:(struct NSDictionary *)arg1;
- (void)handleXPCNotificationDeviceRemoved:(struct NSDictionary *)arg1;
- (void)handleXPCNotificationDeviceAdded:(struct NSDictionary *)arg1;
- (void)handleXPCNotification:(struct NSDictionary *)arg1;
- (BOOL)unpairDevicePair:(id)arg1 error:(id *)arg2;
- (void)unpairDevicePairAsync:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)unpairDevicePairAsync:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)createDevicePairWithGizmo:(id)arg1 companion:(id)arg2 error:(id *)arg3;
- (void)createDevicePairAsyncWithGizmo:(id)arg1 companion:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createDevicePairAsyncWithGizmo:(id)arg1 companion:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)testDevicePairingBetweenGizmo:(id)arg1 companion:(id)arg2 error:(id *)arg3;
- (BOOL)deleteDevice:(id)arg1 error:(id *)arg2;
- (void)deleteDeviceAsync:(id)arg1 completionHandler:(void (^)(NSError *error))arg2;
- (id)cloneDevice:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (void)cloneDeviceAsync:(id)arg1 name:(id)arg2 completionQueue:(id)arg3 completionHandler:(void (^)(NSError *, SimDevice *))arg4;
- (void)deleteDeviceAsync:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (SimDevice*)createDeviceWithType:(id)arg1 runtime:(id)arg2 name:(id)arg3 error:(id *)arg4;
- (void)createDeviceAsyncWithType:(id)arg1 runtime:(id)arg2 name:(id)arg3 completionQueue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)createDeviceAsyncWithType:(id)arg1 runtime:(id)arg2 name:(id)arg3 completionHandler:(void (^)(NSError *, SimDevice *))arg4;
- (BOOL)unregisterNotificationHandler:(unsigned long long)arg1 error:(id *)arg2;
- (void)sendNotification:(id)arg1;
- (unsigned long long)registerNotificationHandlerOnQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (unsigned long long)registerNotificationHandler:(CDUnknownBlockType)arg1;
- (void)removeDevicePairAsync:(id)arg1;
- (void)_onDevicesQueue_addDevicePair:(id)arg1;
- (void)addDevicePair:(id)arg1;
- (void)addDevicePairAsync:(id)arg1;
- (void)removeDeviceAsync:(id)arg1;
- (void)_onDeviceQueue_addDevice:(id)arg1;
- (void)addDevice:(id)arg1;
- (void)addDeviceAsync:(id)arg1;
- (void)_onDefaultCreatedDevicesQueue_updateDefaultDevicePairingsForDeveloperDir:(id)arg1;
- (void)_onDefaultCreatedDevicesQueue_updateDefaultDevicesForDeveloperDir:(id)arg1;
- (void)updateDefaultDevicesAndPairingsForDeveloperDir:(id)arg1 force:(BOOL)arg2;
- (id)devicePairsContainingDevice:(id)arg1;
- (id)devicePairsContainingDeviceUDID:(id)arg1;
@property(readonly, nonatomic) NSArray *availableDevicePairs;
@property(readonly, nonatomic) NSArray *devicePairs;
@property(readonly, nonatomic) NSDictionary *devicePairsByUUID;
@property(readonly, nonatomic) NSArray *availableDevices;
@property(readonly, nonatomic) NSArray *devices;
- (BOOL)isDeviceInSet:(id)arg1;
@property(readonly, nonatomic) NSDictionary *devicesByUDID;
- (id)description;
- (void)saveToDisk;
- (void)processDeviceSetPlist;
- (id)initWithSetPath:(id)arg1 serviceContext:(id)arg2;
- (BOOL)subscribeToNotificationsWithError:(id *)arg1;

@end

